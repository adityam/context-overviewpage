#! /usr/bin/env ruby

# Usage:
#    update [module]
# 
# If the optional argument [module] is provided, then the module tries to update that module

require 'rubygems'
require 'mechanize'
require 'highline/import'

agent = Mechanize.new

login_page = agent.get "http://modules.contextgarden.net/admin/login"
login_form = login_page.form_with :method => "POST"

username = login_form.field_with :name => "user[name]" 
password = login_form.field_with :name => "user[password]"

username.value = ask("username: ") { |q| q.default = "adityam" }
password.value = ask("password: ") { |q| q.echo    = false }

module_page = login_form.submit()

my_module_page = module_page.link_with(:text => 'my modules').click
module_list    = my_module_page.search('//div[@class="content"]/table/tr/td/a')

current_module = ""

say "User modules"
choose do |menu|
    menu.prompt = "Choose module to update: "
    module_list.map do |module_name|
        name = module_name.attr(:href)[1..-1]
        menu.choice name do 
            current_module = name
            say "loading module #{module_name.content.downcase}"
            module_page = my_module_page.link_with(:text => module_name.content).click
        end
    end
    menu.first_answer = ARGV[0]
    menu.select_by    = :index_or_name
end

version_page = module_page.link_with(:text => "add new revison").click
version_form = version_page.form_with :method => "POST"

version  = version_form.field_with       :name => "package[latest_version]" 
filename = version_form.file_upload_with :name => "package[file]"

version.value       = ask("version (old=#{version.value}): ") { |q| q.default = Time.now.strftime("%Y.%m.%d") }
filename.file_name  = ask("filename: ", Pathname) do |q|
    q.validate = Proc.new {|file| File.exists?(file) && File.extname(file) == ".zip"}
    q.responses[:not_valid] = "Please select a zip file"
    q.default = current_module + ".zip"
end.to_s

submission_page = version_form.submit
# puts submission_page.body

result = submission_page.search('//div[@id="description"]/div[@class="content"]/div[@id="notice"]').first.content
puts result


